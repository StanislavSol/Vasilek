
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказТоваров") Тогда
		// Заполнение шапки
		Договор = ДанныеЗаполнения.Договор;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Контрагент = ДанныеЗаполнения.Контрагент;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаТабНоменклатура Из ДанныеЗаполнения.ТабНоменклатура Цикл
			НоваяСтрока = ТабНоменклатура.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТабНоменклатура.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТабНоменклатура.Номенклатура;
			НоваяСтрока.Сумма = ТекСтрокаТабНоменклатура.Сумма;
			НоваяСтрока.Цена = ТекСтрокаТабНоменклатура.Цена;
			НоваяСтрока.НаборСвойств = ТекСтрокаТабНоменклатура.НаборСвойств;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры



Процедура ОбработкаПроведения(Отказ, Режим)
	
	Отказ = АвтозаполнениеРеквизитов.ПроверкаКонтрагентаДляПроведенияДокументов(1,Контрагент); 
	
	//Работа с дублями
	
	//Удаляем дубли
	//ТабНоменклатура.Свернуть("Номенклатура, Количество, Цена, Сумма");
	
	
	//Складываем дубли 
	//ТабНоменклатура.Свернуть("Номенклатура, Цена", "Количество, Сумма");
	//ТабНоменклатура.Свернуть("Номенклатура, Цена, ЕдиницаИзмерения, ВидНоменклатуры", "Количество, Сумма");
	//ТабНоменклатура.Свернуть("Номенклатура, Цена, ЕдиницаИзмерения, ВидНоменклатуры, Количество, Сумма");
	ТабНоменклатура.Свернуть("Номенклатура, Цена, ЕдиницаИзмерения, ВидНоменклатуры, НаборСвойств", "Количество, Сумма");
	
	СуммаДокумента = ТабНоменклатура.Итог("Сумма");
	
	//-----------------------------------------------------------------------
	
	// регистр ОстаткиМатериалов Приход
	Движения.ОстаткиМатериалов.Записывать = Истина;
	
	// регистр СтоимостьМатериалов Приход
	Движения.СтоимостьМатериалов.Записывать = Истина;
	
	// регистр Управленческий 
	Движения.Управленческий.Записывать = Истина;
	
	// регистр Взаиморасчеты Расход
	Движения.Взаиморасчеты.Записывать = Истина;
	Движение = Движения.Взаиморасчеты.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Клиент = Контрагент;
	Движение.Договор = Договор;
	Движение.Сумма = СуммаДокумента;
	
	
	
	Для Каждого ТекСтрокаТабНоменклатура Из ТабНоменклатура Цикл
		Если ТекСтрокаТабНоменклатура.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга Тогда
			//Если Номенклатура не является Услугой
			
			// регистр ОстаткиМатериалов Приход
			Движение = Движения.ОстаткиМатериалов.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Материал = ТекСтрокаТабНоменклатура.Номенклатура;
			Движение.Склад = Склад;
			Движение.Количество = ТекСтрокаТабНоменклатура.Количество;
			//Добавили движение по характеристикам номенклатуры
			Движение.НаборСвойств = ТекСтрокаТабНоменклатура.НаборСвойств;
			
			
			// регистр СтоимостьМатериалов Приход
			Движение = Движения.СтоимостьМатериалов.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Материал = ТекСтрокаТабНоменклатура.Номенклатура;
			Движение.Склад = Склад;
			Движение.Стоимость = ТекСтрокаТабНоменклатура.Сумма;
			Движение.Количество = ТекСтрокаТабНоменклатура.Количество;
			
			Если ТекСтрокаТабНоменклатура.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар Тогда
				// регистр Управленческий
				Движение = Движения.Управленческий.Добавить();
				Движение.СчетДт = ПланыСчетов.Основной.Товары; 
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ТекСтрокаТабНоменклатура.Номенклатура;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад;
				
				Движение.СчетКт = ПланыСчетов.Основной.РасчетыСПоставщиками;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Договоры] = Договор;
				
				Движение.Период = Дата;
				Движение.Сумма = ТекСтрокаТабНоменклатура.Сумма;
				Движение.Количество = ТекСтрокаТабНоменклатура.Количество; 
				Движение.СодержаниеОперации = "Поступление товаров от поставщика";				
			КонецЕсли;
			
			
		Иначе
			
			//Движения по виду номенклатуры - Услуга
			
			// регистр Управленческий
			Движение = Движения.Управленческий.Добавить();
			Движение.СчетДт = ПланыСчетов.Основной.РасходыНаПродажу;
			
			Движение.СчетКт = ПланыСчетов.Основной.РасчетыСПоставщиками;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Договоры] = Договор;
			
			Движение.Период = Дата;
			Движение.Сумма = ТекСтрокаТабНоменклатура.Сумма;
			Движение.Количество = ТекСтрокаТабНоменклатура.Количество;
			Движение.СодержаниеОперации = "Услуги полученные";
			
		КонецЕсли;
		
	КонецЦикла; 
	

КонецПроцедуры   









